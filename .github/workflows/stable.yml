name: Build stable kernel package

on:
  workflow_dispatch:
    inputs:
      release:
        type: choice
        description: Release type
        options:
          - none
          - pre-release
          - release

env:
  HOME: /home/runner
  KERNEL_STABLE_VER: 6.8.1
  PKGVER: 1

jobs:
  apt:
    name: Setup dependencies
    runs-on: self-hosted
    steps:
      - run: |
            sudo apt-get update \
            && sudo apt-get install -y build-essential \
                 bc kmod cpio flex libncurses-dev \
                 libelf-dev libssl-dev dwarves bison \
                 gawk openssl libssl-dev dkms libudev-dev \
                 libpci-dev libiberty-dev autoconf \
                 debhelper lz4

  build:
    name: Build Kernel
    needs: apt
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        config: [generic, cloud]
    steps:
      - uses: actions/checkout@v4
        with:
          path: ${{ matrix.config }}
      - name: Download linux kernel ${{ env.KERNEL_STABLE_VER }} source
        working-directory: ${{ matrix.config }}
        run: |
          wget https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${{ env.KERNEL_STABLE_VER }}.tar.xz \
            && tar xf linux-${{ env.KERNEL_STABLE_VER }}.tar.xz

      - name: Apply patch
        working-directory: ${{ matrix.config }}/linux-${{ env.KERNEL_STABLE_VER }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git clone https://github.com/graysky2/kernel_compiler_patch.git ../kernel_compiler_patch \
           && patch -Np1 -i ../kernel_compiler_patch/more-uarches-for-kernel-6.8-rc4+.patch
          git clone --depth 1 https://gitlab.com/xanmod/linux-patches.git ../xanmod-patches \
           && for i in ../xanmod-patches/linux-6.8.y-xanmod/net/netfilter/*FLOWOFFLOAD*.patch \
                ../xanmod-patches/linux-6.8.y-xanmod/net/tcp/bbr3/*.patch \
                ../xanmod-patches/linux-6.8.y-xanmod/net/tcp/cloudflare/*.patch; do 
                  patch -Np1 -i ${i}
              done
          git clone https://github.com/clearlinux-pkgs/linux.git ../clear-patches \
           && for i in $(grep '^Patch' ../clear-patches/linux.spec |\
                grep -Ev '^Patch0132|^Patch0118|^Patch0113|^Patch0138|^Patch0139|^Patch0107|^Patch0109|^Patch0136|^Patch0147' | sed -n 's/.*: //p'); do
                  patch -Np1 -i "../clear-patches/${i}"
              done
          curl -sSL https://gist.githubusercontent.com/love4taylor/111d56cd2b1dc149cba6d80f617f47b1/raw/1ea1a5df138c881d5b29ea1a02bb3e88f1ff9b4b/0001-net-tcp_brutal-make-it-as-a-built-in-kernel-module.patch | patch -Np1
          patch -Np1 -i ../0001-netfilter-nat-add-brcm-fullcone-support-from-ASUS.patch

      - name: Copy .config and setup some config
        working-directory: ${{ matrix.config }}/linux-${{ env.KERNEL_STABLE_VER }}
        run: |
          scripts/config --file ../config.${{ matrix.config }} \
                         --set-str LOCALVERSION "-egoist-${{ matrix.config }}"
          # /proc/config.gz
          scripts/config --file ../config.${{ matrix.config }} \
                         -e IKCONFIG \
                         -e IKCONFIG_PROC
          # x86-64-v2
          scripts/config --file ../config.${{ matrix.config }} \
                         -d GENERIC_CPU \
                         -e GENERIC_CPU2
          # xt_FLOWOFFLOAD
          scripts/config --file ../config.${{ matrix.config }} \
                         -e NETFILTER_XT_TARGET_FLOWOFFLOAD
          # BBR3
          scripts/config --file ../config.${{ matrix.config }} \
                         -m TCP_CONG_CUBIC \
                         -d DEFAULT_CUBIC \
                         -e TCP_CONG_BBR \
                         -e DEFAULT_BBR \
                         --set-str DEFAULT_TCP_CONG bbr
          # BBR3 doesn't work properly with FQ_CODEL
          scripts/config --file ../config.${{ matrix.config }} \
                         -m NET_SCH_FQ_CODEL \
                         -e NET_SCH_FQ \
                         -d DEFAULT_FQ_CODEL \
                         -e DEFAULT_FQ \
                         --set-str DEFAULT_NET_SCH fq
          # TCP Brutal
          scripts/config --file ../config.${{ matrix.config }} \
                         -m TCP_CONG_BRUTAL
          # zswap
          scripts/config --file ../config.${{ matrix.config }} \
                         -e ZSWAP_DEFAULT_ON \
                         -d ZSWAP_COMPRESSOR_DEFAULT_LZO \
                         -e ZSWAP_COMPRESSOR_DEFAULT_ZSTD
          # NTFS3
          scripts/config --file ../config.${{ matrix.config }} \
                         -m NTFS3_FS \
                         -e NTFS3_LZX_XPRESS \
                         -e NTFS3_FS_POSIX_ACL
          # SMB
          scripts/config --file ../config.${{ matrix.config }} \
                         -m SMB_SERVER \
                         -e SMB_SERVER_SMBDIRECT \
                         -e SMB_SERVER_CHECK_CAP_NET_ADMIN \
                         -e SMB_SERVER_KERBEROS5
          # Security
          scripts/config --file ../config.${{ matrix.config }} \
                         -e SECURITY_SELINUX \
                         -e SECURITY_SELINUX_BOOTPARAM \
                         -e SECURITY_SMACK \
                         -e SECURITY_SMACK_BRINGUP \
                         -e SECURITY_SMACK_NETFILTER \
                         -e SECURITY_SMACK_APPEND_SIGNALS \
                         -e SECURITY_TOMOYO \
                         -e SECURITY_APPARMOR \
                         -e SECURITY_YAMA

      - name: Build
        working-directory: ${{ matrix.config }}/linux-${{ env.KERNEL_STABLE_VER }}
        env:
          DEBEMAIL: "love4taylor <i@love4taylor.com>"
          KDEB_COMPRESS: "xz"
        run: |
          make \
            KCONFIG_CONFIG=../config.${{ matrix.config }} \
            olddefconfig
          make \
            KCONFIG_CONFIG=../config.${{ matrix.config }} \
            KDEB_PKGVERSION=$(make kernelversion)-${{ env.PKGVER }} \
            -j`nproc` \
            bindeb-pkg
          mv linux-libc-dev_${{ env.KERNEL_STABLE_VER }}-${{ env.PKGVER }}_amd64.deb linux-libc-dev_egoist-${{ matrix.config }}_${{ env.KERNEL_STABLE_VER }}-${{ env.PKGVER }}_amd64.deb

      - name: Upload config
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config }}/config.${{ matrix.config }}
          path: ${{ matrix.config }}/config.${{ matrix.config }}

      - name: Upload deb
        uses: actions/upload-artifact@v4
        with:
          name: deb.${{ matrix.config }}
          path: |
            ${{ matrix.config }}/linux-image-${{ env.KERNEL_STABLE_VER }}-egoist-${{ matrix.config }}_${{ env.KERNEL_STABLE_VER }}-${{ env.PKGVER }}_amd64.deb
            ${{ matrix.config }}/linux-headers-${{ env.KERNEL_STABLE_VER }}-egoist-${{ matrix.config }}_${{ env.KERNEL_STABLE_VER }}-${{ env.PKGVER }}_amd64.deb
            ${{ matrix.config }}/linux-libc-dev_egoist-${{ matrix.config }}_${{ env.KERNEL_STABLE_VER }}-${{ env.PKGVER }}_amd64.deb
          compression-level: 0

      - name: Release
        if: ${{ github.event.inputs.release != 'none' }}
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: |
            ${{ matrix.config }}/linux-image-${{ env.KERNEL_STABLE_VER }}-egoist-${{ matrix.config }}_${{ env.KERNEL_STABLE_VER }}-${{ env.PKGVER }}_amd64.deb
            ${{ matrix.config }}/linux-headers-${{ env.KERNEL_STABLE_VER }}-egoist-${{ matrix.config }}_${{ env.KERNEL_STABLE_VER }}-${{ env.PKGVER }}_amd64.deb
            ${{ matrix.config }}/linux-libc-dev_egoist-${{ matrix.config }}_${{ env.KERNEL_STABLE_VER }}-${{ env.PKGVER }}_amd64.deb
          prerelease: ${{ github.event.inputs.release == 'pre-release' }}
          makeLatest: ${{ github.event.inputs.release == 'release' }}
          tag: ${{ env.KERNEL_STABLE_VER }}-${{ env.PKGVER }}
